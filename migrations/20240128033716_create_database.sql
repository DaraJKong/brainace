CREATE TABLE IF NOT EXISTS users (
    id         INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    username   TEXT NOT NULL UNIQUE,
    password   TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS user_permissions (
    user_id    INTEGER NOT NULL,
    token      TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS trees (
    id         INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    user_id    INTEGER NOT NULL,
    name       TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS branches (
    id         INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    tree_id    INTEGER NOT NULL,
    name       TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CHECK (name <> ""),
    FOREIGN KEY (tree_id) REFERENCES trees(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS stems (
    id         INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    branch_id  INTEGER NOT NULL,
    name       TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CHECK(name <> ""),
    FOREIGN KEY (branch_id) REFERENCES branches(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS leaves (
    id         INTEGER PRIMARY KEY AUTOINCREMENT,
    stem_id    INTEGER NOT NULL,
    front      TEXT NOT NULL,
    back       TEXT NOT NULL,
    card       JSONB NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (stem_id) REFERENCES stems(id) ON DELETE CASCADE
);
